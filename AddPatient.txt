package com.communication.majorproject.ui.gallery;

import android.os.Bundle;
import android.util.Log;
import android.util.Patterns;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Switch;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.lifecycle.ViewModelProviders;

import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.StringRequest;
import com.android.volley.toolbox.Volley;
import com.communication.majorproject.DrawerActivity;
import com.communication.majorproject.R;

import org.json.JSONException;
import org.json.JSONObject;

import java.util.HashMap;
import java.util.Map;

public class GalleryFragment extends Fragment implements View.OnClickListener {

    private GalleryViewModel galleryViewModel;
    EditText email,pass;
    Switch isAdmin;
    Button submit;

    public View onCreateView(@NonNull LayoutInflater inflater,
                             ViewGroup container, Bundle savedInstanceState) {
        galleryViewModel =
                ViewModelProviders.of(this).get(GalleryViewModel.class);
        View root = inflater.inflate(R.layout.fragment_gallery, container, false);

//        email = getView().findViewById(R.id.home_email);
//        pass = getView().findViewById(R.id.home_pass);
        return root;
    }

    @Override
    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);

        email = getView().findViewById(R.id.home_email);
        pass = getView().findViewById(R.id.home_pass);
        isAdmin = getView().findViewById(R.id.admin_switch);
        submit = getView().findViewById(R.id.sub_btn);

        submit.setOnClickListener(this);

    }

    @Override
    public void onResume() {
        super.onResume();
        // Set title bar
        ((DrawerActivity) getActivity()).getSupportActionBar().setTitle("Add Patient");

    }

    @Override
    public void onClick(View v) {
        boolean send_f = true;

        final String em = email.getText().toString();
        final String ps = pass.getText().toString();
        final String admin = isAdmin.isChecked()?"true":"false";
//        Toast.makeText(getContext(),em+"\t"+ps+"\t"+admin,Toast.LENGTH_LONG).show();

        if(em.equals("") && !Patterns.EMAIL_ADDRESS.matcher(em).matches())
        {
            email.setError("Please Enter Valid email");
            email.requestFocus();
            send_f = false;
        }

        if(ps.equals(""))
        {
            pass.setError("Please Enter a valid password");
            pass.requestFocus();
            send_f = false;
        }

        if(send_f)
        {
            RequestQueue requestQueue = Volley.newRequestQueue(getContext());
            String Url = getString(R.string.base_url)+"db_insert.php?";

            StringRequest stringRequest = new StringRequest(Request.Method.POST, Url, new Response.Listener<String>() {
                @Override
                public void onResponse(String response) {
//                    Toast.makeText(getContext(), response, Toast.LENGTH_LONG).show();
                    try {
                        JSONObject obj = new JSONObject(response);
                        String msg = obj.getString("msg");

                        if(msg.equals("Insertion Error"))
                            Toast.makeText(getContext(),"Patient with above details already exists \n Please check the DB for details \n", Toast.LENGTH_LONG).show();

                        else{
                            Toast.makeText(getContext(),"Insertion Success!!",Toast.LENGTH_LONG).show();
                        }

                    } catch (JSONException e) {
                        e.printStackTrace();
                    }

//                                Log.i("VOLLEY", response);
                }
            }, new Response.ErrorListener() {
                @Override
                public void onErrorResponse(VolleyError error) {
                    Log.e("VOLLEY", error.toString());
                }
            }) {

                @Override
                protected Map<String, String> getParams() {
                    Map<String, String> params = new HashMap<String, String>();
                    params.put("email",em);
                    params.put("pass", ps);
                    if(admin.equals("true"))
                        params.put("isAdmin","1");

                    return params;
                }
            };

            requestQueue.add(stringRequest);
        }


    }
}
